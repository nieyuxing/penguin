<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qexz.dao.ExaminationPaperMapper" >
    <resultMap id="BaseResultMap" type="com.qexz.model.ExaminationPaper" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="exam_name" property="exam_name" jdbcType="VARCHAR" />
        <result column="examination_type" property="examination_type" jdbcType="INTEGER" />
        <result column="department_id" property="department_id" jdbcType="INTEGER" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="score" property="score" jdbcType="INTEGER" />
        <result column="difficulty" property="difficulty" jdbcType="INTEGER" />
        <result column="version" property="version" jdbcType="VARCHAR" />
        <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
        <result column="update_time" property="update_time" jdbcType="TIMESTAMP" />
        <result column="startDate" property="startDate" jdbcType="TIMESTAMP" />
        <result column="endDate" property="endDate" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, exam_name, examination_type, department_id, state, score, difficulty, version, create_time, update_time, startDate, endDate
    </sql>
   

    <insert id="insertExaminationPaper" parameterType="com.qexz.model.ExaminationPaper" >
        insert into t_examination_paper
          (id, exam_name, examination_type, department_id, state, score, difficulty, version,   startDate, endDate)
        values
          (#{ExaminationPaper.id}, #{ExaminationPaper.exam_name}, #{ExaminationPaper.examination_type}, #{ExaminationPaper.department_id}, #{ExaminationPaper.state}, #{ExaminationPaper.score}, #{ExaminationPaper.difficulty}, #{ExaminationPaper.version},  #{ExaminationPaper.startDate}, #{ExaminationPaper.endDate})

    </insert>
    
    <update id="updateExaminationPaperById" parameterType="com.qexz.model.ExaminationPaper">
        UPDATE t_examination_paper
        SET
          exam_name = #{ExaminationPaper.exam_name},
          examination_type = #{ExaminationPaper.examination_type},
          department_id = #{ExaminationPaper.department_id},
          state = #{ExaminationPaper.state},
          score = #{ExaminationPaper.score},
          difficulty = #{ExaminationPaper.difficulty},
          version = version + 1,
          update_time = CURRENT_TIMESTAMP ,
          startDate = #{ExaminationPaper.startDate},
          endDate = #{ExaminationPaper.endDate}
        WHERE
          id = #{ExaminationPaper.id}
    </update>


    <select id="getCount" resultType="int">
        SELECT
        COUNT(1)
        FROM t_examination_paper
    </select>

    <select id="getCountByUserId" parameterType="int" resultType="int">
        SELECT
        count(1)
        FROM t_examination_answer answer
        LEFT JOIN
        t_examination_paper  paper
        on answer.paper_id = paper.id
        where answer.user_id = #{id}
    </select>

    <select id="getExaminationPapers" resultMap="BaseResultMap" >
        SELECT
        *
        FROM t_examination_paper
        ORDER BY create_time DESC
    </select>

    <delete id="deleteExaminationPaper" parameterType="int" >
        delete from t_examination_paper
        where id = #{id}
    </delete>

    <update id="updateState" >
        update t_examination_paper set
        state = #{state}
        where id = #{id}
    </update>

    <select id="getExaminationPapersByIdSets" resultMap="BaseResultMap">
        SELECT
        *
        FROM t_examination_paper
        WHERE 1 = 1
        <if test="ids != null and ids.size > 0">
            AND id IN
            <foreach collection="ids" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>

    <!--根据主键ID查询账号信息-->
    <select id="getExaminationPaperById" resultMap="BaseResultMap" parameterType="int" >
        select
        *
        from t_examination_paper
        where id = #{id}
    </select>

<!--    <select id="getExaminationPaperByUserId" resultMap="BaseResultMap" parameterType="int" >-->
<!--        select-->
<!--            p.*-->
<!--        from t_examination_answer a left join t_examination_paper p on a.paper_id = p.id-->
<!--        where a.id = #{answerId}-->
<!--    </select>-->

    <select id="getExaminationPaperByUserId" resultType="com.qexz.model.ExaminationPaper" parameterType="int" >
        SELECT
        paper.*,answer.id answerId
        FROM t_examination_answer answer
        LEFT JOIN
        t_examination_paper  paper
        on answer.paper_id = paper.id
        where answer.user_id = #{userId}
        and answer.state = 0
    </select>

    <select id="getExaminationPaperByAnswerId" resultType="com.qexz.model.ExaminationPaper" parameterType="int" >
        SELECT
            paper.*,answer.id answerId
        FROM t_examination_answer answer
                 LEFT JOIN
             t_examination_paper  paper
             on answer.paper_id = paper.id
        where answer.id = #{answerId}
    </select>
</mapper>