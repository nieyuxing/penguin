<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qexz.dao.ExaminationAnswerDetailMapper" >
    <resultMap id="BaseResultMap" type="com.qexz.model.ExaminationAnswerDetail" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="paper_id" property="paper_id" jdbcType="VARCHAR" />
        <result column="answer_id" property="answer_id" jdbcType="INTEGER" />
        <result column="question_id" property="question_id" jdbcType="INTEGER" />
        <result column="answer" property="answer" jdbcType="VARCHAR" />
        <result column="score" property="score" jdbcType="INTEGER" />
        <result column="version" property="version" jdbcType="VARCHAR" />
        <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
        <result column="update_time" property="update_time" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, paper_id, answer_id, question_id, answer, score, version, create_time, update_time
    </sql>

    <insert id="insertExaminationAnswerDetail" parameterType="com.qexz.model.ExaminationAnswerDetail" >
        insert into t_examination_answer_detail
          (id, paper_id, answer_id, question_id, answer, score, version, create_time, update_time)
        values
          (#{ExaminationAnswerDetail.id}, #{ExaminationAnswerDetail.paper_id}, #{ExaminationAnswerDetail.answer_id}, #{ExaminationAnswerDetail.question_id}, #{ExaminationAnswerDetail.answer}, #{ExaminationAnswerDetail.score}, #{ExaminationAnswerDetail.version}, #{ExaminationAnswerDetail.create_time}, #{ExaminationAnswerDetail.update_time})
    </insert>
    
    <update id="updateExaminationAnswerDetailById" parameterType="com.qexz.model.ExaminationAnswerDetail">
        UPDATE t_examination_answer_detail
        SET
            paper_id = #{ExaminationAnswerDetail.paper_id},
            answer_id = #{ExaminationAnswerDetail.answer_id},
            question_id = #{ExaminationAnswerDetail.question_id},
            answer = #{ExaminationAnswerDetail.answer},
            score = #{ExaminationAnswerDetail.score},
            version = version + 1,
            update_time = sysdate
        WHERE
          id = #{ExaminationAnswerDetail.id}
    </update>


    <select id="getCount" resultType="int">
        SELECT
        COUNT(1)
        FROM t_examination_answer_detail
    </select>

    <select id="getExaminationAnswerDetails" resultMap="BaseResultMap" >
        SELECT
        *
        FROM t_examination_answer_detail
        ORDER BY create_time DESC
    </select>

    <delete id="deleteExaminationAnswerDetail" parameterType="int" >
        delete from t_examination_answer_detail
        where id = #{id}
    </delete>

    <update id="updateState" >
        update t_examination_answer_detail set
        state = #{state}
        where id = #{id}
    </update>

    <select id="getExaminationAnswerDetailsByIdSets" resultMap="BaseResultMap">
        SELECT
        *
        FROM t_examination_answer_detail
        WHERE 1 = 1
        <if test="ids != null and ids.size > 0">
            AND id IN
            <foreach collection="ids" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>

    <!--根据主键ID查询账号信息-->
    <select id="getExaminationAnswerDetailById" resultMap="BaseResultMap" parameterType="int" >
        select
        *
        from t_examination_answer_detail
        where id = #{id}
    </select>

    <!--根据主键ID查询账号信息-->
    <select id="getExaminationAnswerDetailsByAnswerId" resultMap="BaseResultMap" parameterType="int" >
        select
        *
        from t_examination_answer_detail
        where answer_id = #{id}
    </select>


</mapper>